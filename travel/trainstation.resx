<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>