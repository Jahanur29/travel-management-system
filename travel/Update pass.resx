<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMQERMQExIVFRAWFhoXFhcYFhYYGhUXFxUWGBgWFxcY
        HSggGBolHhYYIjEiJSkrMC4vFx8zODMtNygvLiv/2wBDAQoKCg4NDhoQEBs1JSAjLy0tLi0zLSsrLTU3
        MDg3LTItLS0tLSstLS0rLy4tLS4tLS0uLTcvNSstNSsrKy04LTX/wAARCACyARsDASIAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAYBAwQFBwII/8QAQxAAAQMCAwUEBgcFCAMBAAAAAQACAwQRBRIhBhMx
        QVEHImFxFDJCUoGRI2JyobGywTN0grPRJDQ1U3OS4fAVQ7QI/8QAGQEBAQADAQAAAAAAAAAAAAAAAAUB
        AwQC/8QAJxEBAAEEAQIFBQEAAAAAAAAAAAECAwQRIRIxEyIyQYEFQlGRobH/2gAMAwEAAhEDEQA/AO4o
        iICIiAiIgIiICLwZAOJHzCb5vvD5hNG3tFQFVQEREBERAREQEREBERAREQEREBERAREQEREBERAREQER
        EBERAVqoqGxjM9wa3qStHi+07IyWRDO/r7I/qobjWKvJ77i6Q8uTQfDl5Lts4VdfNXEf1wX8+ijinmf4
        k2LbZNZpGB9p3PyaorW7TzSe263nYf7RotI95JuTcrzdVLePbo7Ql3Mi7c9U/HaGW/EZD7S8ivkHtn7l
        jIt2mnTZQY7OzUSH8PwW7w/bmVmkjcw/78VEUWuuzbr9UNtF6uj0y65hG0kFTYBwa8+yTx8jzW5XC2uI
        NwbFTzZDawuIp5zrwY8/ld/VTcjC6Y6qP0p4+d1T01/tOERFOURERAREQEREBERAREQEREBERAREQERE
        BERAREQFDtq8fNzBGbAaPcOZ90eC3e02I+jwOcD33d1vmefwF1zRl3EAauJsPElU/p+PFU+JV2jslfUs
        maI8OjvPdsYrRQuqXC+uSMe8/mfJo1Ude8uJcTck3J6lbjayYb1tO0/RwNDB4v4vd89PgtIqVE9Xm/P+
        JtVMU+X8f6qqIqE9ASSbADUkngAOq9TLEQrdWXVTB7QV3aTZmtgj3ssZENrkxkOyeDwNR52t4qEzlvsu
        eSuacmJ9PLqjGmPVwmTKhp4OCuqDwSEH1it/htedGnUL1Re33eK7PT2blAVS6qtzU6hsRjfpMW7efpY9
        D9ZvI/opKuQ7KV+4qo3X7rjkd5O0XXlDy7UUXOO0rmHdm5b57wIiLldQiIgIiICIiAiIgIiICIiAiIgI
        iICIiAiIggfaLVfSRR8g0u+JNv0Wm2WYHVUV+AOY/wAIJ/RSfavZmaql3sbmWygWcSDpfoD1UakwDE6Y
        l0EEbnkFt9402DhYkAga+ar2r9unH6N86lFvY92rI6+njcfxoJpjI5zzxc4uP8Rv+qtq1NheJRevQym3
        utD/AMhKw3V0zdH0szT4xSD9F0xkW57S0Tj3I7w2KmPZ1g4fI6qeLiPuxj659Z3mBYfFc+GLN9pr2+bS
        PxXbtkaTdUcLeZbnPm85v1t8FzZl6PD1TPd04VmfE3VHZt3NBBBFweI6rg3aHss2lq3CIAQyDeNb7tyc
        zR4A8PNd6XJO1SsbJVNY033bMrvMm9vwXFhxM3NeztzJ1b37ucegO8Pmr0NI5pvpprxWUsmmhLjlAuTo
        PiqsW4Spu1NtJCWWB5tDh5OAI/FeFscecN6GN1DGNZfqWixWuXumdxG3iqI3OlWusQV3CmfmY13VoPzC
        4eBfRdwpWZWMb0aB8hZT/qH2/Kj9P+74XURFNUhERAREQEREBERAREQEREBERAREQEREBERBjyyXuAbW
        /oo1itPICXsle13g4q/ieIbqZ7TzsR5EBa6oxMEHVZhhuNlcXfOHxy6yst3uGZp5kDmt+oXsSc08rxwD
        LfEn/hTRJIeHRNPFoPmAvYRQvbXa7cXp4D9L7bvc8B9b8F7tW6rlXTS8XbtNunqqXts9r20oMMRBqCNT
        xEfn1d4LkVRIXuLnElxJJJ4kniSr0ri4knUnieq9QwXKt2bFNuNR+0S9kVXJ3P6WIYLlb2liEADz6/sj
        p4leo4WwC7tZDwHTxKxpHlxudSt06ho5qUcSSSeJVES687e9NvspQb+qjZbug53fZaQfxsPiuvqN7E4E
        aWHO8WnksXD3W+yzz1ufE+Ckii5V3xK+O0LWLa8OjnvIiIuZ0iIiAiIgIiICIiAiIgIiICIiAiIgIiIC
        oSjnWBJ4DVQHara6WN2WJot1/ogz9td08ta527kt3H2NiebXeHBQ52H1HElu7GrnB4Nm8yBxupRLQTSR
        sFS1ri9geW+6TyPj5LXSbPsbwBA6Znf1QSHZGrgiiLf2bnOJs4m5bplJcRZShrgRcG4UFpQTHoMzo9CO
        ZZyPw1Wbg+IGKzv/AFk2c33fG3JZYZu2mO+iQ2afppLhv1Rzd8P1XIJXEm51JUk29rt7WPF+7HZjfgLn
        7yVGwreJbii3H5nlCy7013J/EcEca3bYhTMDnftXC7Wn2R7x8U2fpW3fPJ+yhbncPePBjPifwWrrap0z
        3SOPecb+Xgt8zzqGiKeNyuOeSbk3JXlY10z25ppnbJJU62G2YN21c7bc4mHl0kcOvQcuPlY2J2SL8tVU
        t7vGOIjj0e8dOYb8SuiKZlZO/JR8qmLja89fxAiIp6gIiICIiAiIgIiICIiAiIgIiICIiAiIgIiIPErM
        zS3qCPmFzeqov7VC2QaNmaHf7h9xXS1HdraYhjpoyGyBhuSL6NsQQPe1t8fBBmVDsz3HpoPh/wA3Wvqm
        LxSTZWNBNzYXPU21KrLKCssIvW1z4JmlgJLjlsOd9AFbjx8yO3eQ7wm2W2t+FrdVmVjQZ4v9Rv5guhtp
        2B2cMbn96wv80HBcTqSJpA8EEPIPOxBsvELweBTaiB0dXOHNLTvHEXFrguJBHUFa+A6q5br4hBuW+ZS6
        rl3dBHGPWmkL3fZZZrR87laK6y8RqC8RDk2MAfMlYd1spjh4qFMuz/ZsVDvSZReFhsxp4PeOZ6tb+Pko
        YSu27J04joqdo/ywT5u7xPzJXLmXJpo1Hu6sK3FVe59mgr+0Rkc81OzD8RnML9298FOJGZsodbMH9HDQ
        24rIwXtApqiZtNJHUUlQ/wBSOqhMRf4NJuCfC902G/b4r+/u/wDnp1gdrVRC6mjp7h1a+eH0ZgsZBJvW
        nOANQAL3KkLCdk21PBajZbaSDEoTPTklgkdGb2Buw2vYE6EWcPBwWt29qXmCKgjJFRWv3AcPYjy3nl+D
        AR5uasSKmZheIxNjGSjrWCGw4MqYWHIf442lvmwdSgmqiOMdoVPBM6nihqayZhtI2lhMu7OujzcAHThe
        6lcwJaQNHWNj0NtFBeymugjpzQuIZiEUkgqI3d2Rzy9x3lj67SCCCOSCQbNbVwV5eyMSsmjAMkUsbo5G
        Zr5btd1tyWBjm31PTTOpmRVFXUttnjpYjK6O9/XsQAdOF7qV5Re9teF/DooB2XVcMDZqGUtZiQqJnTNd
        YPmLpC5krb+u0sLRp0QSDZ3a6CuL42MmjnY3M+GaJ0cjQfB2h100Kz9n8YZWwNnjDmglzSx9g9j2OLXM
        eASAQQea2GUXvbXqojhA9CxSopeENY30uEchK2zalo87sfbqXdUEvWtwXHIazfbl2bczOhfw0ey17eGv
        4rF20xg0dFNMwXmsGQt5umkIZG0fxOCjGAYSMGrKWEfsayERSHrWRNL94T1kbnHm0dUHQ1rMOxpk89TT
        sa+9OWNe8gZC97c+RpvcuaCL6aZgrmO4mykppql/qRMc8+NhoB4k2HxUDn9IosMp6dhy4liU9nv4mOSp
        Jklf/Ay406CyCQ45t9R0sppwZKipHGGnjdK8G3A5dGnwJWFF2m0wI9Jpq2jaTYPqaZzGG/1gSB8VIdmt
        nYMPhEMDLDi551fI48XvcdXElbOaJr2lrmhzSLEEAgjoQeKDzTVDJWNkY5r43AFrmkEOB4EEaEKObTba
        soZ2U3olXUSvjMgFNEJbNDspJGYEa+HNarBqb/xOJtoYzagrWSSwRk6QTxWdKxl+DHNIda+hBss6X/Ho
        /wBwf/PYgx6ftNpg5ramnrKIONmvqqcxsJP17kD42Uwq6oRxPlNy1jS82tcgC+nJaPb+upYaCo9Kczdu
        jcA1xF3uLTlDQeLr8LKxhVPLFgjI5r75tHZ4PEERHQ+IQaqn7UGyMbIzCsWfG4BzXNpA5rgdQWkPsQeq
        yaftOpMzWVMVVROcbD0qB0QP8WoHxK2vZ5/hVB+6xfy2rc19FHPG6KVjZI3CzmuAIIOnAoL0UgcA5pDm
        kXBBuCDwII4helAthonYfXVOD5i6mbG2ppMxJLInOySR3PJr+HHQ+KnqAtJtTLJHFvGR7wAOa9vg62vw
        st2rVWzMx7erSPmEHOanEXMYCRrbVY9Ji7nAEtIBvYnnY2NviFerGXaV7NH/AGGCUDRrpGO8LyOIP/eo
        WRbhlvPEeQe38wXTlzCkb9JH9tv5gunpLDgG1tXJJUzB73OySPDcxJDRmOg6BamB2tuB6LY7R/3uo/1X
        /mK14YDxVmiOIRa55lsamdoy3cAco5rGdXRj2h96vx7OtcM5laAfeOvxurrcDpm+tOD5AlbfM1eVTD6e
        SpJbBE+RwF7AAfiQu74XEWQxNIsRG0EdCGi4XE6RtPAQ5j5cw1BaLfIrt9C8uijceJY0nzLQVwZ3VxtQ
        wenzac1wzYSgxKsxOaqhMkjawsad5IyzRBC61mOA4uKl+zuxFBh7s9NTMZJYjOS57wDxAc8khXNmcIkp
        5a578tp6ozMsb9wxRM72mhuwrN2hjndTTMpi0VDmFsbnGwYXaZ+B9W97W1ICnqDnz8Ur5sSmr6TDxV08
        TTSwPNRHCAWv+ncGu1N3tDb9GeJVdp6jGq6ndAcGax12vjkFbATFJG4OY8A8SCOHPULoWBYWykp4qZnq
        RsDfEn2nHqSSSfErPQanZbGRW0kVSBlc5tnt9yRpyyMPiHAhMd2bpa4AVEDJCPVcRZ7fFrxZzT5FYuC4
        NJTVVWW5fQ6giZoBs5k7hlls21srrNde/G6076LHKYlkE9JVxXOU1LZGSNF9A50Zs+3C9kFdnpJqHEjh
        j5nz0r6czwOlOaWLI9rHROf7be9cE66W1Ujx3Z6lrm5KmBko5Fw1b9lw1b8CtTstszNFPJXVkwmrpGCO
        7W5Y4Ywb7uIHWxIBJPGyw6ihxqmc4U1RS1UJcS0VLXsfGCb5c8Z74HC5CDzg+9w7Eo8O38k9HPDJJDvX
        Z5IXRObmZn4ujIcLXuRbis3tEpy2COvjH0tDIKgeMQ0nZ5GMu+QVNmdmp21L8Qrp2zVjmbtjY2lsUEd7
        lrAdSSeJKlUsYcC0i7SCCDzB0IQQurqG4jilLCzvU1LGKx55b2VuWnafHK57/wDoW226wt9TRyCLSoiL
        Z4D0liOdo8jYtPg4rH2A2TGGQyx5sznyudmuTaNpyQsude7G1otyUoQc/wARxRuLnDKaP9lMG1lQPdih
        ILYz4umsP4HLL7SyYfQa+146Sqa+bj3YZGmN77DjlzA/NZmyGx7KCetnBvv5bxjX6OL1t2Og3j5DYaWs
        pLUQNkY6N7Q5jgWuaRcOaRYgg8QQgrDK17Q9pDmuAII1BB1BB6L2oFHspX4eSMMqozTXu2lqg5zYzxIj
        kaczW35cl7NJj1SDHJNRUjDxfA2SSS3PLvDZpQe8SmFXjlJFGbihjlmnI4NfMzdRRk9bZnW8lg7VbN02
        I41DDVR7yNtE54GZ7e8Jmi92EHgSpbsvs5Dh8O6hzEucXySPOaSaQ+tJI7m4rHkwiQ4oyt7u5FK6E6nN
        nMrXDS1rWB1ugiOI9nlPhb2YnQQZnwayQOJkD4/adEX3LZgBcG/Uc1Nq+ujqMPlnicHRSU73NcOYMZIW
        4UQpNnJqZ1ZTw5PQJ2PfE0uIdBPICHsa21t042dodCXaaoM7s8/wqg/dYv5bVIVzjBaXH6SnhpmRYaWQ
        xtjaXPqLkMaACbaX0WRUYTjla0xT1VNRxHR3orZHSObzDXvPcJ11HBBfwicVeO1M8ZvDS0opS4cDM+QS
        vAPPKGgeZKnC1mzmBQ0EDaaBto26knVz3Hi955uPVbNARFQlBzPEn5Xvb0cR96kuz9IJMOLT7e8I8w42
        PzCjOPxOzvfY2LifmbqZ4O8MoIyOAi+/W/3oIZg+s8IP+Y38QumXXPG05jdHJbRrgfkVPt6CARqDqD1B
        4FZHAtpP73Uf6r/zFYUam/aJsuWOdWQi7HG8rfdJ4vH1Tz6KERFWLNcVUxMI16iaapiWdNy8lbuvUp4e
        St3XQ5lV3/Dv2MX2G/lC+f7rv1F+zZ9hv5Qp+f8Ab8qOB93w41V9o2LSYtLhlL6NffSRx52EaMzHvODu
        jTyWXS9peI0WJR0GJQwkPcxuaK4yiQ2a9upzC/EaHQqCmhlqNpJYYZ3U8z6qYNmaLllmvJIFxe4BHHmr
        0lI/C8ei/wDKZqobxjhK5ztQXDdzWPHKeLOGh485yi+mVxPbntKxKlxWTD6YQuGaNkYcy7i6RrbAuzAe
        s7wXawb68l8wdqzA7H5mmTdAyQgy6/RgsZ39CDpx48kHYNhcQxySpLcRpo4qbduIc3d33l25R3ZHG1s3
        LkpZtPjLaGknq3NzCJhdlBtmPBrb8rkgX5XUA7KKSCCplDMZFe98ekdn3YGuBLu9I7qAp5tdPTx0VQ6r
        BNLkyygAk5HkNJ010zX01001QckwftMxupbJWQ0Mc1HG6zmsBuNASAc2ZxtzDSu3U8mdjXWtmaDbpcXs
        vmHFa9mC1LJsIxLexSXc6PjlAt3JQdHg8L2BH3r6XwmqM0EUpblc+Nri33S5oNvvQci7Q+0nEKPE3UNM
        IS07sMDmXcXSAaXzAcSpNsRiOOyVWXEKaOOlyOOZu7vn0yjuyOPXkuT9sjQcdcC/dg7kF/8Alggd/Tpx
        +C6H2V0UEFW/JjQr3viIEVn92zmkvGaRw5W+KDoG1c1UykldRMD6sAbtptYnML3zEDhfmuJ492oY5Qyi
        Cpip45S0ODSwO7riQDdshHEHmvoNfN3/AOgP8XZ+7xfzJEHWNgK/GZZZBiVPHFEGAxluTV19QcsjuSnK
        ozgPJVQEREBERAREQEREBERBRWXd4kchx8T08lfWlxPB5HvL4pzGT6wLcwPiNRZBrNrMQY1hbpdY9DK5
        mG3cCO9mt0YZAf8An4rZ0OysbHbyV7ppON3ABo8m/wBbreGEWtbRBosNkZPHl0ur9NLunCF3AmzfA9PJ
        W6jZll80L3Qu+rYt/wBp4fAhVoNnskglkmfK8cLgNaPG2tz8VnbGmyfGHAgi4IsQeYPIrk22uyho376I
        f2Zx4f5bj7J+qeR+C7CGLzNA17S1zQ5pFiCLgjxC2Wrs26tw13bUXKdS+e5pmttdwGnMpFd/qMe/7LHH
        9F3ODZulYbtgjB+yFsI6ZreDQPIBdVWdPtDlpwI95cPotnayYgNpngE8XWaB48bruEEdmtHQAfIK6AvS
        5bt6q5rqdNqzTa30o1S7CUEdX6e2AirzufvN7Ke88EOOUvy+0dLK/tNsZRYk5jquDeOjBDTnkYQHEEg7
        twuNOfDXqt8qrU3LNHTNijZEy+RjQ1t3OcbNFhdziSTYcSbqM412cYbWTvqZ6YvmfbM7fTtvYBo0a8Aa
        AcApYiCM7PbA4fh82/pqfdy5SzNvZnd0kEiz3kcgt9X0Uc8boZWNfE8Wc1wuHDoQshEEQo+zDCYpRM2i
        ZnBuMz5HtBvfRjnFo+Wil6Igi2O9neG10zqiop88zgAXb2ZtwBYaMeB9y9bP9n+HUE3pFNT7uYNLc29m
        do7iLPeRy6KTogKNbQ7BYfiEwqKmn3koaG5t7MzutJIFmPA5lSVEABERAREQEREBERAREQEREBERAVLK
        qIKWSyqiClksqogpZLKqIKWVURAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQ
        EREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERB//9k=
</value>
  </data>
</root>