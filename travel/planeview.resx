<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RIUAkaRKUiAT/9k=
</value>
  </data>
</root>